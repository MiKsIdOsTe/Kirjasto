
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author lentt
 */
public class MangaValikko extends javax.swing.JFrame {

    JDBCMgKirjasto dbMgki = new JDBCMgKirjasto();// Luo uuden tietokantayhteyden nimeltä dbMgKi MgKirjasto.db tietokantaan. 

    /* JDBCManga dbMg = new JDBCManga();// Luo uuden tietokantayhteyden nimeltä dbMg Manga.db tietokantaan.
    JDBCMgTekija dbMgte = new JDBCMgTekija();// Luo uuden tietokantayhteyden nimeltä dbMgte MgTekija.db tietokantaan. 
    JDBCMgKustantaja dbMgku = new JDBCMgKustantaja();// Luo uuden tietokantayhteyden nimeltä dbku Kustantaja.db tietokantaan.
     */
    /**
     * Creates new form MangaValikko
     */
    public MangaValikko() throws ClassNotFoundException, SQLException {
        System.out.println("Alkaa");
        initComponents();
        System.out.println("Alkaa2");
        tableload(MangaTaulukko);
        System.out.println("Alkaa3");
        //Tyhjennetään tekstikentät
        clear();
        idloadMgKi(KenttaIDKirjasto);
        System.out.println("Alkaa4");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        MangaTaulukko = new javax.swing.JTable();
        KenttaIDKirjasto = new javax.swing.JTextField();
        KenttaMgNimi = new javax.swing.JTextField();
        KenttaMgTekija = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        KenttaMgKustantaja = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        KenttaMgNro = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        KenttaMgKieli = new javax.swing.JTextField();
        MgLisaaNappi = new javax.swing.JButton();
        MgPaivitaNappi = new javax.swing.JButton();
        MgPoistaNappi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        MangaTaulukko.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "KirjastoID", "Manga", "Tekijä", "Kustantaja", "Nro", "Kieli"
            }
        ));
        MangaTaulukko.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MangaTaulukkoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(MangaTaulukko);

        KenttaIDKirjasto.setEditable(false);

        jLabel1.setText("Kirjasto ID");

        jLabel2.setText("Mangan nimi:");

        jLabel3.setText("Tekijän nimi:");

        jLabel4.setText("Kustantaja:");

        KenttaMgKustantaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KenttaMgKustantajaActionPerformed(evt);
            }
        });

        jLabel5.setText("Nro:");

        jLabel6.setText("Kieli:");

        MgLisaaNappi.setText("Lisää");
        MgLisaaNappi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MgLisaaNappiActionPerformed(evt);
            }
        });

        MgPaivitaNappi.setText("Päivitä");
        MgPaivitaNappi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MgPaivitaNappiActionPerformed(evt);
            }
        });

        MgPoistaNappi.setText("Poista");
        MgPoistaNappi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MgPoistaNappiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(MgLisaaNappi, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MgPaivitaNappi, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MgPoistaNappi))
                    .addComponent(KenttaMgKieli)
                    .addComponent(KenttaMgNro)
                    .addComponent(KenttaMgKustantaja)
                    .addComponent(KenttaMgTekija)
                    .addComponent(KenttaMgNimi)
                    .addComponent(KenttaIDKirjasto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 245, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 736, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(94, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(KenttaIDKirjasto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(KenttaMgNimi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(KenttaMgTekija, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(KenttaMgKustantaja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(KenttaMgNro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addGap(8, 8, 8)
                        .addComponent(KenttaMgKieli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(MgLisaaNappi)
                            .addComponent(MgPaivitaNappi)
                            .addComponent(MgPoistaNappi))))
                .addGap(49, 49, 49))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void KenttaMgKustantajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KenttaMgKustantajaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_KenttaMgKustantajaActionPerformed

    private void MgLisaaNappiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MgLisaaNappiActionPerformed
        // Manga kirjaston lisää nappi toiminnot
        try {
            System.out.println("Alkaa2");
            //Lisätään tiedot tietokantaan
            dbMgki.putData("INSERT INTO MgKirjasto(IDMANGAKIRJASTO,MANGA,MGTEKIJA,MGKUSTANTAJA,NRO,KIELI) "
                    + "values('" + KenttaIDKirjasto.getText() + "','" + KenttaMgNimi.getText() + "','" + KenttaMgTekija.getText()
                    + "','" + KenttaMgKustantaja.getText() + "','" + KenttaMgKieli.getText() + "','" + KenttaMgNro.getText() + "')");
            System.out.println("Alkaa6");
            //Päivitetään taulukko, jotta uusimmat muutokset näkyvät
            tableload(MangaTaulukko);
            //Tyhjennetään tekstikentät
            clear();
            //Päivitetään id-kenttään uusi viimeisin id
            idloadMgKi(KenttaIDKirjasto);

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MangaValikko.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(MangaValikko.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_MgLisaaNappiActionPerformed

    private void MgPaivitaNappiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MgPaivitaNappiActionPerformed
        // Manga kirjaston Päivitä nappi toiminnot
        try {
            //Päivitetään viimeisimmät muutokset tietokantaan
            dbMgki.putData("update MgKirjasto set MANGA='" + KenttaMgNimi.getText() + "',MGTEKIJA='" + KenttaMgTekija.getText() + "',MGKUSTANTAJA='"
                    + KenttaMgKustantaja.getText() + "',NRO='" + KenttaMgKieli.getText() + "',KIELI='" + KenttaMgNro.getText() + "' where IDMANGAKIRJASTO='" + KenttaIDKirjasto.getText() + "'");
            //Tyhjennetään tekstikentät
            clear();
            //Päivitetään taulukko, jotta uusimmat muutokset näkyvät
            tableload(MangaTaulukko);
            //Päivitetään id-kenttään uusi viimeisin id
            idloadMgKi(KenttaIDKirjasto);
            //Päivitetään valinta combo

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MangaValikko.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(MangaValikko.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_MgPaivitaNappiActionPerformed

    private void MgPoistaNappiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MgPoistaNappiActionPerformed
        // Manga kirjaston Päivitä nappi toiminnot
        try {
            //Poistetaan tieto tietokannasta
            dbMgki.putData("delete from MgKirjasto where IDMANGAKIRJASTO='" + KenttaIDKirjasto.getText() + "'");
            //Tyhjennetään tekstikentät
            clear();
            //Päivitetään taulukko, jotta uusimmat muutokset näkyvät
            tableload(MangaTaulukko);
            //Päivitetään id-kenttään uusi viimeisin id
            idloadMgKi(KenttaIDKirjasto);

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MangaValikko.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(MangaValikko.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_MgPoistaNappiActionPerformed

    private void MangaTaulukkoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MangaTaulukkoMouseClicked
        //Klikkaamalla taulukkossa jotakin tietoa ne päivittyvät tekstikenttiin
        //Valitun tiedon id (paikka 0) lisätään id-tekstikenttään
        KenttaIDKirjasto.setText(String.valueOf(MangaTaulukko.getValueAt(MangaTaulukko.getSelectedRow(), 0)));
        //Valitun tiedon nimi (paikka 1) lisätään nimi-tekstikenttään
        KenttaMgNimi.setText(String.valueOf(MangaTaulukko.getValueAt(MangaTaulukko.getSelectedRow(), 1)));
        //Valitun tiedon tekijä (paikka 2) lisätään tekijä-tekstikenttään
        KenttaMgTekija.setText(String.valueOf(MangaTaulukko.getValueAt(MangaTaulukko.getSelectedRow(), 2)));
        //Valitun tiedon Nro (paikka 3) lisätään Kustantaja-tekstikenttään
        KenttaMgKustantaja.setText(String.valueOf(MangaTaulukko.getValueAt(MangaTaulukko.getSelectedRow(), 3)));
        //Valitun tiedon Nro (paikka 3) lisätään Nro-tekstikenttään
        KenttaMgKieli.setText(String.valueOf(MangaTaulukko.getValueAt(MangaTaulukko.getSelectedRow(), 4)));
        //Valitun tiedon Nro (paikka 3) lisätään Kieli-tekstikenttään
        KenttaMgNro.setText(String.valueOf(MangaTaulukko.getValueAt(MangaTaulukko.getSelectedRow(), 5)));
    }//GEN-LAST:event_MangaTaulukkoMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MangaValikko.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MangaValikko.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MangaValikko.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MangaValikko.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new MangaValikko().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(MangaValikko.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(MangaValikko.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField KenttaIDKirjasto;
    private javax.swing.JTextField KenttaMgKieli;
    private javax.swing.JTextField KenttaMgKustantaja;
    private javax.swing.JTextField KenttaMgNimi;
    private javax.swing.JTextField KenttaMgNro;
    private javax.swing.JTextField KenttaMgTekija;
    private javax.swing.JTable MangaTaulukko;
    private javax.swing.JButton MgLisaaNappi;
    private javax.swing.JButton MgPaivitaNappi;
    private javax.swing.JButton MgPoistaNappi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private void clear() {
        //Tyhjennetään teksti kentät
        KenttaIDKirjasto.setText(null);
        KenttaMgNimi.setText(null);
        KenttaMgTekija.setText(null);
        KenttaMgKustantaja.setText(null);
        KenttaMgKieli.setText(null);
        KenttaMgNro.setText(null);
    }

    
    private void tableload(JTable jt) throws ClassNotFoundException, SQLException {
        DefaultTableModel dt = (DefaultTableModel) jt.getModel();
        //Asetetaan rivit aloittamaan 0
        dt.setRowCount(0);
        //Haetaan tiedot tietokannasta ja lisätään ne taulukkoon
        ResultSet rset = dbMgki.getData("SELECT * FROM MgKirjasto");

        while (rset.next()) {
            Vector v = new Vector();
            v.add(rset.getString(1));
            v.add(rset.getString(2));
            v.add(rset.getString(3));
            v.add(rset.getString(4));
            v.add(rset.getString(5));
            v.add(rset.getString(6));
            dt.addRow(v);
        }
    }
    

    private void idloadMgKi(JTextField jText) throws ClassNotFoundException, SQLException {
        //Haetaan viimeisin vapaana oleva ID
        ResultSet rset = dbMgki.getData("select max(IDMANGAKIRJASTO) from MgKirjasto");
        while (rset.next()) {
            int i = rset.getInt(1);
            i = i + 1;
            jText.setText(String.valueOf(i));
        }
    }

}
